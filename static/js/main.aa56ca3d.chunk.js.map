{"version":3,"sources":["img/Reddit_logo_orange.svg","img/reddittext.svg","components/upper-header/Logo.js","components/upper-header/Login.js","components/upper-header/MoreOptions.js","actions/actions.js","actions/snoowrapActions.js","oauthInfo.js","components/upper-header/SearchBar.js","components/customComponents.js","components/upper-header/ArrowDropDown.js","components/upper-header/Filter.js","components/upper-header/UpperHeader.js","components/lower-header/View.js","components/lower-header/Sort.js","components/lower-header/Location.js","components/lower-header/LowerHeader.js","components/Header.js","components/posts/ScoreButton.js","components/posts/PostTopBar.js","components/posts/PostFooter.js","components/posts/SinglePostCard.js","components/posts/PostTopBarClassic.js","components/posts/SinglePostClassic.js","components/posts/Posts.js","components/side-menu/Feeds.js","components/side-menu/SidePlaceholder.js","components/side-menu/Premium.js","components/side-menu/SingleCommunity.js","components/side-menu/TrendingCommunities.js","components/side-menu/UpperFooter.js","components/side-menu/LowerFooter.js","components/side-menu/Footer.js","components/side-menu/SideMenu.js","reducers/reducers.js","store/store.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Logo","react_default","a","createElement","Navbar","Brand","href","className","alt","src","icon","height","text","Login","Button","variant","MoreOptions","Dropdown","alignRight","Toggle","index_esm","Menu","Header","NavDropdown","Item","Divider","chooseSubreddit","value","type","storePosts","r","snoowrap","client_id","client_secret","refresh_token","user_agent","username","password","redirect_uri","connect","state","asyncSearch","input","dispatch","search","query","limit","sort","then","res","catch","err","console","log","_ref","Form","inline","onSubmit","e","preventDefault","placeholder","ref","node","CustomMenu","React","Component","_React$Component2","props","context","_this2","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","bind","assertThisInitialized","inherits","createClass","key","setState","target","toLowerCase","trim","_this$props","children","style","labeledBy","aria-labelledby","FormControl","autoFocus","onChange","Children","toArray","filter","child","startsWith","RedditCard","concat","subreddit","handleSelect","eventKey","popular","all","original","as","onSelect","Nav","Link","OverlayTrigger","placement","overlay","Tooltip","UpperHeader","bg","upper_header_Logo","components_upper_header_ArrowDropDown","components_upper_header_SearchBar","components_upper_header_Filter","components_upper_header_Login","components_upper_header_MoreOptions","view","chooseView","cardColorClass","classicColorClass","compactColorClass","md_index_esm","go_index_esm","chooseSort","Location","LowerHeader","components_lower_header_View","components_lower_header_Sort","components_lower_header_Location","components_upper_header_UpperHeader","lower_header_LowerHeader","ScoreButton","convertedUps","PostTopBar","barParams","authorName","createdTimeUnix","createdTime","Date","timeDisplayed","toLocaleDateString","weekday","month","day","year","hour","minute","second","timeZoneName","timePassed","dt2","dt1","diff","getTime","Math","abs","round","diffHours","delay","show","hide","PostFooter","footerParams","permalink","convertedComments","rel","drop","convertNums","x","toFixed","SinglePostCard","post","title","selftext_html","media_embed","url","thumbnail","ups","subreddit_name_prefixed","author","name","created","num_comments","posts_ScoreButton","posts_PostTopBar","dangerouslySetInnerHTML","__html","entries","length","content","match","checkURL","posts_PostFooter","SinglePostClassic","checkThumbnail","PostTopBarClassic","page","posts","fetching","asyncFetchPosts","getHot","getNew","getControversial","getTop","getRising","increasePage","resetPage","useEffect","lib_default","pullDownToRefresh","refreshFunction","dataLength","next","hasMore","loader","map","components_posts_SinglePostCard","id","components_posts_SinglePostClassic","viewPosts","Feeds","customComponents_RedditCard","SidePlaceholder","Premium","SingleCommunity","icon_img","display_name_prefixed","subscribers","convertedSubscribers","trendingCommunities","asyncFetchTrendingCommunities","getPopularSubreddits","community","side_menu_SingleCommunity","UpperFooter","LowerFooter","Footer","side_menu_UpperFooter","side_menu_LowerFooter","SideMenu","side_menu_Feeds","side_menu_SidePlaceholder","side_menu_Premium","components_side_menu_TrendingCommunities","side_menu_Footer","onClick","document","documentElement","scrollTop","reducer","combineReducers","arguments","undefined","action","store","createStore","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","App","es","components_Header","components_posts_Posts","components_side_menu_SideMenu","Boolean","location","hostname","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.aa56ca3d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Reddit_logo_orange.e03328ce.svg\";","module.exports = __webpack_public_path__ + \"static/media/reddittext.ae56e979.svg\";","import React from 'react';\r\nimport { Navbar } from 'react-bootstrap'\r\n\r\nimport icon from '../../img/Reddit_logo_orange.svg'\r\nimport text from '../../img/reddittext.svg'\r\n\r\n\r\nconst Logo = () => {\r\n    return (\r\n        <Navbar.Brand href=\"/\" className='mr-0'>\r\n            <img\r\n                alt=\"\"\r\n                src={icon}\r\n                height=\"32\"\r\n                className=\"d-inline-block align-middle\"\r\n            />\r\n            <img\r\n                alt=\"\"\r\n                src={text}\r\n                height=\"20\"\r\n                className=\"align-middle ml-2 responsive-items\"\r\n            />\r\n        </Navbar.Brand>\r\n    );\r\n}\r\n\r\nexport default Logo;\r\n\r\n","import React from 'react';\r\n\r\nimport { Button } from 'react-bootstrap'\r\n\r\nimport './Login.css'\r\n\r\nconst Login = () => {\r\n    return (\r\n        <div className='login-container responsive-sign-in'>\r\n            <Button variant=\"outline-primary\" className='mr-3 login-button large-screen-button'>LOG IN</Button>\r\n            <Button variant=\"primary\" className='login-button large-screen-button'>SIGN UP</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Login;","import React from 'react';\r\nimport { NavDropdown, Dropdown } from 'react-bootstrap'\r\n\r\nimport { IoMdPerson, IoIosMoon, IoIosRadioButtonOn, IoMdRose, IoMdHelpCircleOutline, IoMdLogOut, IoIosLogIn } from \"react-icons/io\"\r\n\r\nimport './MoreOptions.css'\r\n\r\nconst MoreOptions = () => {\r\n    return (\r\n        <Dropdown alignRight>\r\n\r\n            <Dropdown.Toggle variant=\"\" className='options-button'>\r\n                <IoMdPerson className='text-secondary options-icon options-toggle-icon' />\r\n            </Dropdown.Toggle>\r\n\r\n            <Dropdown.Menu className='font-size-14'>\r\n\r\n                <Dropdown.Header className='font-size-10 font-weight-600'>VIEW OPTIONS</Dropdown.Header>\r\n\r\n                <NavDropdown.Item href=\"\">\r\n                    <IoIosMoon className='text-secondary mr-2 options-icon' />\r\n                    Night Mode\r\n                </NavDropdown.Item>\r\n\r\n                <Dropdown.Header className='font-size-10'>MORE STUFF</Dropdown.Header>\r\n\r\n                <NavDropdown.Item href=\"\" className='d-flex'>\r\n                    <IoIosRadioButtonOn className='text-secondary mr-2 options-icon' />\r\n                    <div>\r\n                        <span>Reddit Coins</span>\r\n                        <p className='mt-1 font-size-12'>0 coins</p>\r\n                    </div>\r\n                </NavDropdown.Item>\r\n\r\n                <NavDropdown.Item href=\"\">\r\n                    <IoMdRose className='text-secondary mr-2 options-icon' />\r\n                    Reddit Premium\r\n                </NavDropdown.Item>\r\n\r\n                <NavDropdown.Item href=\"\">\r\n                    <IoMdHelpCircleOutline className='text-secondary mr-2 options-icon' />\r\n                    Help Center\r\n                    <IoMdLogOut className='text-secondary mx-2' />\r\n                </NavDropdown.Item>\r\n\r\n                <NavDropdown.Divider />\r\n\r\n                <NavDropdown.Item href=\"\">\r\n                    <IoIosLogIn className='text-secondary mr-2 options-icon' />\r\n                    Log In / Sign Up\r\n                </NavDropdown.Item>\r\n                \r\n            </Dropdown.Menu>\r\n        </Dropdown>\r\n    )\r\n}\r\n\r\n\r\nexport default MoreOptions;","export const SWITCH_FETCHING = 'switch fetching'\r\nexport const switchFetching = () => {\r\n    return {\r\n        type: SWITCH_FETCHING,\r\n    }\r\n}\r\n\r\nexport const SUBREDDIT = 'subreddit'\r\nexport const chooseSubreddit = (value) => {\r\n    return {\r\n        type: SUBREDDIT,\r\n        value\r\n    }\r\n}\r\n\r\nexport const SORT = 'sort'\r\nexport const chooseSort = (value) => {\r\n    return {\r\n        type: SORT,\r\n        value\r\n    }\r\n}\r\n\r\nexport const VIEW = 'view'\r\nexport const chooseView = (value) => {\r\n    return {\r\n        type: VIEW,\r\n        value\r\n    }\r\n}\r\n\r\nexport const INCREASE_PAGE = 'increase page' \r\nexport const increasePage = () => {\r\n    return {\r\n        type: INCREASE_PAGE\r\n    }\r\n}\r\n\r\nexport const RESETE_PAGE = 'reset page' \r\nexport const resetPage = () => {\r\n    return {\r\n        type: RESETE_PAGE\r\n    }\r\n}\r\n\r\nexport const POSTS = 'posts'\r\nexport const storePosts = (value) => {\r\n    return {\r\n        type: POSTS,\r\n        value\r\n    }\r\n}\r\n\r\nexport const TRENDING_COMMUNITIES = 'trending communities'\r\nexport const storeTrendingCommunities = (value) => {\r\n    return {\r\n        type: TRENDING_COMMUNITIES,\r\n        value\r\n    }\r\n}","import snoowrap from 'snoowrap'\r\n\r\nimport { storePosts, storeTrendingCommunities, switchFetching } from './actions'\r\nimport { oauthInfo } from '../oauthInfo'\r\n\r\nexport const r = new snoowrap(oauthInfo)\r\n\r\n\r\nexport const asyncFetchPosts = (subreddit, sort, page) => {\r\n    switch (sort) {\r\n        case 'hot':\r\n            return dispatch => {\r\n                dispatch(switchFetching())\r\n                return r.getHot(subreddit, { limit: 10 * page })\r\n                    .then(res => {\r\n                        dispatch(switchFetching())\r\n                        dispatch(storePosts(res))\r\n                    })\r\n                    .catch(err => console.log(err))\r\n            }\r\n        case 'new':\r\n            return dispatch => {\r\n                dispatch(switchFetching())\r\n                return r.getNew(subreddit, { limit: 10 * page })\r\n                    .then(res => {\r\n                        dispatch(switchFetching())\r\n                        dispatch(storePosts(res))\r\n                    })\r\n                    .catch(err => console.log(err))\r\n            }\r\n        case 'controversial':\r\n            return dispatch => {\r\n                dispatch(switchFetching())\r\n                return r.getControversial(subreddit, { limit: 10 * page })\r\n                    .then(res => {\r\n                        dispatch(switchFetching())\r\n                        dispatch(storePosts(res))\r\n                    })\r\n                    .catch(err => console.log(err))\r\n            }\r\n        case 'top':\r\n            return dispatch => {\r\n                dispatch(switchFetching())\r\n                return r.getTop(subreddit, { limit: 10 * page })\r\n                    .then(res => {\r\n                        dispatch(switchFetching())\r\n                        dispatch(storePosts(res))\r\n                    })\r\n                    .catch(err => console.log(err))\r\n            }\r\n        case 'rising':\r\n            return dispatch => {\r\n                dispatch(switchFetching())\r\n                return r.getRising(subreddit, { limit: 10 * page })\r\n                    .then(res => {\r\n                        dispatch(switchFetching())\r\n                        dispatch(storePosts(res))\r\n                    })\r\n                    .catch(err => console.log(err))\r\n            }\r\n        default:\r\n            return\r\n    }\r\n}\r\n\r\n\r\nexport const asyncFetchTrendingCommunities = () => {\r\n    return dispatch => {\r\n        return r.getPopularSubreddits({ limit: 5 })\r\n            .then(res => dispatch(storeTrendingCommunities(res)))\r\n            .catch(err => console.log(err))\r\n    }\r\n}\r\n\r\n\r\nexport const asyncSearch = (input) => {\r\n    return dispatch => {\r\n        dispatch(switchFetching())\r\n        return r.search({\r\n            query: input,\r\n            limit: 15,\r\n            sort: 'top'\r\n        })\r\n            .then(res => {\r\n                dispatch(switchFetching())\r\n                dispatch(storePosts(res))\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n}","export const oauthInfo = {\r\n  client_id: \"zOu6XnB0aA3jHA\",\r\n  client_secret: \"A75w6DJECsy7Yg_ELbgncEDnh0M\",\r\n  refresh_token: \"230433376741-rJ0XFm0f4BFzyFuaoCohfQa-ZwY\",\r\n  user_agent: \"web:Reddit clone:v0.8 (by /u/fflol)\",\r\n  username: \"\",\r\n  password: \"\",\r\n  redirect_uri: \"http://localhost:3000/\"\r\n}\r\n\r\n// const accessToken = '230433376741-xFSfzN19ZGkv7tseEmfC23MpV38'","import React from 'react';\r\nimport { Form } from 'react-bootstrap'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { IoMdSearch } from \"react-icons/io\"\r\n\r\nimport { asyncSearch } from '../../actions/snoowrapActions'\r\n\r\nimport './SearchBar.css'\r\n\r\n\r\nconst SearchBar = ({ asyncSearch }) => {\r\n\r\n  let input = ''\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    asyncSearch(input.value)\r\n  }\r\n\r\n  return (\r\n    <div className='search-container flex-grow-1 d-flex'>\r\n      <IoMdSearch className='search-icon align-middle' />\r\n      <Form inline className='search-form' onSubmit={handleSubmit}>\r\n        <input type=\"text\" placeholder=\"Search Reddit\" className=\"search-bar\" ref={node => input = node}  />\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, { asyncSearch })(SearchBar)\r\n","import React from 'react'\r\n\r\nimport { FormControl } from 'react-bootstrap'\r\n\r\nimport './customComponents.css'\r\n// .font-size-14 is in ArrowDropDown.css\r\n\r\n\r\n\r\nexport class CustomToggle extends React.Component {\r\n    constructor(props, context) {\r\n        super(props, context);\r\n\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    handleClick(e) {\r\n        e.preventDefault();\r\n\r\n        this.props.onClick(e);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <a href=\"\" onClick={this.handleClick}>\r\n                {this.props.children}\r\n            </a>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport class CustomMenu extends React.Component {\r\n    constructor(props, context) {\r\n        super(props, context);\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n\r\n        this.state = { value: '' };\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.setState({ value: e.target.value.toLowerCase().trim() });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            children,\r\n            style,\r\n            className,\r\n            'aria-labelledby': labeledBy,\r\n        } = this.props;\r\n\r\n        const { value } = this.state;\r\n\r\n        return (\r\n            <div style={style} className={className} aria-labelledby={labeledBy}>\r\n                <FormControl\r\n                    autoFocus\r\n                    className=\"mx-3 font-size-14 custom-menu\"\r\n                    placeholder=\"Type to filter...\"\r\n                    onChange={this.handleChange}\r\n                    value={value}\r\n                />\r\n                <ul className=\"list-unstyled\">\r\n                    {React.Children.toArray(children).filter(\r\n                        child => {\r\n                            return !value || child.props.children[1].toLowerCase().startsWith(value)\r\n                        })}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport const RedditCard = (props) => {\r\n    return (\r\n        <div className={`reddit-card ${props.className ? props.className : ''}`}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { NavDropdown, Dropdown } from 'react-bootstrap'\r\n\r\nimport { chooseSubreddit } from '../../actions/actions'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { CustomMenu } from '../customComponents'\r\nimport { IoMdTrendingUp, IoIosPodium, IoIosCreate, IoIosRadioButtonOn, IoMdRose } from \"react-icons/io\"\r\n\r\nimport './ArrowDropDown.css'\r\n\r\n\r\nconst ArrowDropDown = ({ subreddit, chooseSubreddit }) => {\r\n\r\n    const handleSelect = (eventKey) => {\r\n        chooseSubreddit(eventKey)\r\n    }\r\n\r\n    const popular = (\r\n        <span>\r\n            <IoMdTrendingUp className='text-primary pr-1 dropdown-icons' />\r\n            <span className='responsive-items capitalize'>popular</span>\r\n        </span>\r\n    )\r\n\r\n    const all = (\r\n        <span>\r\n            <IoIosPodium className='text-primary pr-1 dropdown-icons' />\r\n            <span className='responsive-items capitalize'>all</span>\r\n        </span>\r\n    )\r\n\r\n    const original = (\r\n        <span>\r\n            <IoIosCreate className='text-primary pr-1 dropdown-icons' />\r\n            <span className='responsive-items capitalize'>original content</span>\r\n        </span>\r\n    )\r\n\r\n\r\n    return (\r\n        <Dropdown className='dropdown-container'>\r\n\r\n            <Dropdown.Toggle variant='' className='dropdown-toggle-custom align-items-center p-0 d-flex justify-content-between'>\r\n                {(() => {\r\n                    switch (subreddit) {\r\n                        case 'popular':\r\n                            return popular\r\n                        case 'all':\r\n                            return all\r\n                        case 'original':\r\n                            return original\r\n                        default:\r\n                            return popular\r\n                    }\r\n                })()}\r\n            </Dropdown.Toggle>\r\n\r\n            <Dropdown.Menu className='font-size-14 w-100' as={CustomMenu}>\r\n\r\n                <Dropdown.Header className='font-size-10'>REDDIT FEEDS</Dropdown.Header>\r\n\r\n                <NavDropdown.Item eventKey='popular' onSelect={handleSelect}>\r\n                    <span>\r\n                        <IoMdTrendingUp className='text-primary pr-1 dropdown-icons' />\r\n                        <span className='capitalize'>popular</span>\r\n                    </span>\r\n                </NavDropdown.Item>\r\n\r\n                <NavDropdown.Item eventKey='all' onSelect={handleSelect}>\r\n                    <span>\r\n                        <IoIosPodium className='text-primary pr-1 dropdown-icons' />\r\n                        <span className='capitalize'>all</span>\r\n                    </span>\r\n                </NavDropdown.Item>\r\n\r\n                <NavDropdown.Item eventKey='original' onSelect={handleSelect}>\r\n                    <span>\r\n                        <IoIosCreate className='text-primary pr-1 dropdown-icons' />\r\n                        <span className='capitalize'>original content</span>\r\n                    </span>\r\n                </NavDropdown.Item>\r\n\r\n                <Dropdown.Header className='font-size-10'>OTHER</Dropdown.Header>\r\n\r\n                <NavDropdown.Item href=\"\">\r\n                    <IoIosRadioButtonOn className='text-warning pr-1 dropdown-icons capitalize' />\r\n                    coin\r\n                </NavDropdown.Item>\r\n\r\n                <NavDropdown.Item href=\"\">\r\n                    <IoMdRose className='pr-1 premium-icon capitalize' />\r\n                    premium\r\n                </NavDropdown.Item>\r\n\r\n            </Dropdown.Menu>\r\n\r\n        </Dropdown>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        subreddit: state.subreddit\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { chooseSubreddit })(ArrowDropDown)","import React from 'react';\r\nimport { Nav, Tooltip, OverlayTrigger } from 'react-bootstrap'\r\n\r\nimport { chooseSubreddit } from '../../actions/actions'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { IoMdTrendingUp, IoIosPodium, IoIosCreate } from \"react-icons/io\"\r\n\r\nimport './Filter.css'\r\n\r\n\r\n\r\nconst Filter = ({ chooseSubreddit }) => {\r\n\r\n    const handleSelect = (eventKey) => {\r\n        chooseSubreddit(eventKey)\r\n    }\r\n\r\n    return (\r\n        <div className='filter-container'>\r\n\r\n            <Nav.Link eventKey='popular' onSelect={handleSelect} className='px-2 pt-0'>\r\n                <OverlayTrigger placement='bottom' overlay={<Tooltip>Popular</Tooltip>}>\r\n                    <IoMdTrendingUp className='pr-1 filter-icons' />\r\n                </OverlayTrigger>\r\n            </Nav.Link>\r\n\r\n            <Nav.Link eventKey='all' onSelect={handleSelect} className='px-2 pt-0'>\r\n                <OverlayTrigger placement='bottom' overlay={<Tooltip>All</Tooltip>}>\r\n                    <IoIosPodium className='pr-1 filter-icons' />\r\n                </OverlayTrigger>\r\n            </Nav.Link>\r\n\r\n            <Nav.Link eventKey='original' onSelect={handleSelect} className='px-2 pt-0'>\r\n                <OverlayTrigger placement='bottom' overlay={<Tooltip>Original content</Tooltip>}>\r\n                    <IoIosCreate className='pr-1 filter-icons' />\r\n                </OverlayTrigger>\r\n            </Nav.Link>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        \r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { chooseSubreddit })(Filter)","import React from 'react';\r\nimport { Navbar } from 'react-bootstrap'\r\n\r\nimport Logo from './Logo'\r\nimport Login from './Login'\r\nimport MoreOptions from './MoreOptions'\r\nimport SearchBar from './SearchBar'\r\nimport ArrowDropDown from './ArrowDropDown'\r\nimport Filter from './Filter'\r\n\r\nimport './UpperHeader.css'\r\n\r\n\r\nconst UpperHeader = () => {\r\n  return (\r\n    <Navbar bg=\"white\" variant=\"light\" className='upper-header'>\r\n      <div className='d-flex flex-grow-1'>\r\n        <Logo />\r\n        <ArrowDropDown />\r\n        <SearchBar />\r\n      </div>\r\n      <div className='d-flex'>\r\n        <Filter />\r\n        <Login />\r\n        <MoreOptions />\r\n      </div>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default UpperHeader;\r\n\r\n","import React from 'react'\r\n\r\nimport { Nav, Tooltip, OverlayTrigger } from 'react-bootstrap'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { chooseView } from '../../actions/actions'\r\n\r\nimport { MdReorder, MdViewAgenda } from \"react-icons/md\";\r\nimport { GoThreeBars } from \"react-icons/go\";\r\n\r\n\r\nimport './View.css'\r\n\r\n\r\nconst View = ({ view, chooseView }) => {\r\n\r\n  const handleSelect = (eventKey) => {\r\n    chooseView(eventKey)\r\n  }\r\n\r\n  const cardColorClass = view === 'card' ? 'text-primary' : 'light-blue'\r\n  const classicColorClass = view === 'classic' ? 'text-primary' : 'light-blue'\r\n  const compactColorClass = view === 'compact' ? 'text-primary' : 'light-blue'\r\n\r\n  return (\r\n    <div className='d-flex align-items-center view-container'>\r\n\r\n      <span className='view-title'>VIEW</span>\r\n\r\n      <Nav.Link eventKey='card' onSelect={handleSelect} className='p-0'>\r\n        <OverlayTrigger placement='top' overlay={<Tooltip>Card</Tooltip>}>\r\n          <MdViewAgenda className={`${cardColorClass} card-icon`} />\r\n        </OverlayTrigger>\r\n      </Nav.Link>\r\n\r\n      <Nav.Link eventKey='classic' onSelect={handleSelect} className='p-0'>\r\n        <OverlayTrigger placement='top' overlay={<Tooltip>Classic</Tooltip>}>\r\n          <GoThreeBars className={`${classicColorClass} filter-icons`} />\r\n        </OverlayTrigger>\r\n      </Nav.Link>\r\n\r\n      <Nav.Link eventKey='compact' onSelect={handleSelect} className='p-0'>\r\n        <OverlayTrigger placement='top' overlay={<Tooltip>Compact</Tooltip>}>\r\n          <MdReorder className={`${compactColorClass} filter-icons`} />\r\n        </OverlayTrigger>\r\n      </Nav.Link>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    view: state.view\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, { chooseView })(View)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { NavDropdown, Dropdown } from 'react-bootstrap'\r\n\r\nimport { chooseSort } from '../../actions/actions'\r\n\r\nimport { IoIosBonfire, IoIosStar, IoIosThunderstorm, IoIosPodium, IoMdTrendingUp, } from \"react-icons/io\"\r\n\r\nimport './Sort.css'\r\n\r\n\r\nconst Sort = ({ sort, chooseSort }) => {\r\n\r\n  const handleSelect = (eventKey) => {\r\n    chooseSort(eventKey)\r\n  }\r\n\r\n  const icon = () => {\r\n    switch (sort) {\r\n      case 'hot':\r\n        return <IoIosBonfire className='sort-icon' />\r\n      case 'new':\r\n        return <IoIosStar className='sort-icon' />\r\n      case 'controversial':\r\n        return <IoIosThunderstorm className='sort-icon' />\r\n      case 'top':\r\n        return <IoIosPodium className='sort-icon' />\r\n      case 'rising':\r\n        return <IoMdTrendingUp className='sort-icon' />\r\n      default:\r\n        return\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='d-flex align-items-center'>\r\n      <span className='sort-title'>SORT</span>\r\n\r\n      <Dropdown>\r\n\r\n        <Dropdown.Toggle variant=\"\" className='sort-toggle d-flex align-items-center justify-content-around'>\r\n          {icon()}\r\n          <span className='sort-toggle-title'>{sort}</span>\r\n        </Dropdown.Toggle>\r\n\r\n        <Dropdown.Menu className='font-size-14'>\r\n\r\n          <NavDropdown.Item eventKey='hot' onSelect={handleSelect}>\r\n            <IoIosBonfire className='text-secondary mr-2 options-icon' />\r\n            Hot\r\n          </NavDropdown.Item>\r\n\r\n          <NavDropdown.Item eventKey='new' onSelect={handleSelect}>\r\n            <IoIosStar className='text-secondary mr-2 options-icon' />\r\n            New\r\n          </NavDropdown.Item>\r\n\r\n          <NavDropdown.Item eventKey='controversial' onSelect={handleSelect}>\r\n            <IoIosThunderstorm className='text-secondary mr-2 options-icon' />\r\n            Controversial\r\n          </NavDropdown.Item>\r\n\r\n          <NavDropdown.Item eventKey='top' onSelect={handleSelect}>\r\n            <IoIosPodium className='text-secondary mr-2 options-icon' />\r\n            Top\r\n          </NavDropdown.Item>\r\n\r\n          <NavDropdown.Item eventKey='rising' onSelect={handleSelect}>\r\n            <IoMdTrendingUp className='text-secondary mr-2 options-icon' />\r\n            Rising\r\n          </NavDropdown.Item>\r\n\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    sort: state.sort\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, { chooseSort })(Sort)","import React from 'react'\r\n\r\nimport { Dropdown, NavDropdown } from 'react-bootstrap'\r\n\r\nimport './Location.css'\r\n\r\n\r\nconst Location = () => {\r\n  return (\r\n    <div className='location-container'>\r\n\r\n      <Dropdown>\r\n\r\n        <Dropdown.Toggle variant=\"\" className='sort-toggle d-flex align-items-center justify-content-around'>\r\n          <span className='sort-toggle-title'>New Zealand</span>\r\n        </Dropdown.Toggle>\r\n\r\n        <Dropdown.Menu className='font-size-14'>\r\n          <NavDropdown.Item href=\"\">\r\n            New Zealand\r\n          </NavDropdown.Item>\r\n        </Dropdown.Menu>\r\n\r\n      </Dropdown>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Location  ","import React from 'react';\r\nimport {Navbar} from 'react-bootstrap'\r\n\r\nimport View from './View'\r\nimport Sort from './Sort'\r\nimport Location from './Location'\r\n\r\nimport './LowerHeader.css'\r\n\r\n\r\nfunction LowerHeader() {\r\n  return (\r\n    <Navbar className='d-flex justify-content-center main-responsive-container'>\r\n      <div className='lower-header-container'>\r\n        <View />\r\n        <Sort />\r\n        <Location />\r\n      </div>\r\n      <div className='side-menu-container'></div>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default LowerHeader;\r\n","import React from 'react';\r\n\r\nimport UpperHeader from './upper-header/UpperHeader';\r\nimport LowerHeader from './lower-header/LowerHeader';\r\n\r\nimport './Header.css'\r\n\r\n\r\nfunction Header() {\r\n  return (\r\n    <header className='header-container'>\r\n        <UpperHeader />\r\n        <LowerHeader />\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nimport { IoMdArrowRoundUp, IoMdArrowRoundDown } from \"react-icons/io\";\r\n\r\nimport './ScoreButton.css'\r\n\r\nfunction ScoreButton({ convertedUps }) {\r\n    return (\r\n        <div className='score-button-container'>\r\n            <button className='score-button'>\r\n                <IoMdArrowRoundUp className='score-icon' />\r\n            </button>\r\n            <span className='score-number'>{convertedUps}</span>\r\n            <button className='score-button'>\r\n                <IoMdArrowRoundDown className='score-icon' />\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ScoreButton;\r\n","import React from 'react';\r\n\r\nimport { OverlayTrigger, Button, Tooltip } from 'react-bootstrap'\r\n\r\nimport './PostTopBar.css'\r\n\r\n\r\n\r\nfunction diffHours(dt2, dt1) {\r\n    var diff = (dt2.getTime() - dt1.getTime()) / 1000;\r\n    diff /= (60 * 60);\r\n    return Math.abs(Math.round(diff));\r\n}\r\n\r\n\r\nfunction PostTopBar({ barParams, className }) {\r\n\r\n    const { subreddit, authorName, createdTimeUnix } = barParams\r\n    const createdTime = new Date(createdTimeUnix * 1000)\r\n    const options = { weekday: 'short', month: 'short', day: 'numeric', year: 'numeric', hour: '2-digit', minute: '2-digit', second: '2-digit', timeZoneName: \"short\" }\r\n    const timeDisplayed = createdTime.toLocaleDateString('en-US', options)\r\n    const timePassed = diffHours(createdTime, new Date())\r\n\r\n    return (\r\n        <div className={`d-flex justify-content-between post-top-bar-container ${className}`}>\r\n\r\n            <div className='d-flex mt-1'>\r\n\r\n                <span className='top-bar-overlay font-weight-700'>{subreddit}</span>\r\n                <span className='top-bar-overlay'>&nbsp;u/{authorName}&nbsp;</span>\r\n                {/* <OverlayTrigger\r\n                    placement=\"bottom-start\"\r\n                    delay={{ show: 250, hide: 400 }}\r\n                    overlay={\r\n                        <Popover>\r\n                            <UserMiniWindow />\r\n                        </Popover>\r\n                    }\r\n                >\r\n                    <span className='top-bar-overlay font-weight-700'>{subreddit}</span>\r\n                </OverlayTrigger> */}\r\n\r\n                <span>&nbsp; &#183; &nbsp;</span>\r\n\r\n                <span>Posted by</span>\r\n\r\n                <OverlayTrigger\r\n                    placement=\"top\"\r\n                    delay={{ show: 250, hide: 400 }}\r\n                    overlay={<Tooltip className='top-bar-time-window'>{timeDisplayed}</Tooltip>}\r\n                >\r\n                    <span className='top-bar-overlay'>{timePassed} hours ago</span>\r\n                </OverlayTrigger>\r\n\r\n            </div>\r\n\r\n            <Button className='top-bar-join-button'>+JOIN</Button>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PostTopBar;\r\n","import React from 'react';\r\n\r\nimport { Dropdown } from 'react-bootstrap'\r\n\r\nimport { IoIosText, IoIosShareAlt, IoMdAddCircleOutline, IoIosMore, IoIosFlag, IoIosRemoveCircleOutline, IoMdArrowRoundUp, IoMdArrowRoundDown } from \"react-icons/io\";\r\n\r\n\r\nimport './PostFooter.css'\r\n\r\nfunction PostFooter({ footerParams }) {\r\n\r\n    const { permalink, convertedUps, convertedComments } = footerParams\r\n\r\n    return (\r\n        <div className='d-flex post-footer-container'>\r\n\r\n            <div className='responsive-post-footer-score'>\r\n                <button className='score-button'>\r\n                    <IoMdArrowRoundUp className='score-icon' />\r\n                </button>\r\n                <span className='score-number'>{convertedUps}</span>\r\n                <button className='score-button'>\r\n                    <IoMdArrowRoundDown className='score-icon' />\r\n                </button>\r\n            </div>\r\n\r\n            <a href={`https://www.reddit.com${permalink}#CommentSort--SortPicker`} className='post-footer-button' rel=\"noopener noreferrer\" target=\"_blank\">\r\n                <IoIosText className='post-footer-icon' />\r\n                <span>{convertedComments} comments</span>\r\n            </a>\r\n\r\n            <a className='post-footer-button responsive-post-footer-button'>\r\n                <IoIosShareAlt className='post-footer-icon' />\r\n                <span>Share</span>\r\n            </a>\r\n\r\n            <a className='post-footer-button responsive-post-footer-button'>\r\n                <IoMdAddCircleOutline className='post-footer-icon' />\r\n                <span>Save</span>\r\n            </a>\r\n\r\n            <Dropdown drop='up'>\r\n\r\n                <Dropdown.Toggle variant=\"\" className='post-footer-button'>\r\n                    <IoIosMore className='post-footer-icon' />\r\n                </Dropdown.Toggle>\r\n\r\n                <Dropdown.Menu className='post-footer-dropdown-menu'>\r\n\r\n                    <Dropdown.Item className='post-footer-item responsive-post-footer-item'>\r\n                        <IoIosShareAlt className='post-footer-icon' />\r\n                        <span>Share</span>\r\n                    </Dropdown.Item>\r\n\r\n                    <Dropdown.Divider className='responsive-post-footer-item' />\r\n\r\n                    <Dropdown.Item className='post-footer-item responsive-post-footer-item'>\r\n                        <IoMdAddCircleOutline className='post-footer-icon' />\r\n                        <span>Save</span>\r\n                    </Dropdown.Item>\r\n\r\n                    <Dropdown.Divider className='responsive-post-footer-item' />\r\n\r\n                    <Dropdown.Item className='post-footer-item'>\r\n                        <IoIosFlag className='post-footer-icon' />\r\n                        <span>Hide</span>\r\n                    </Dropdown.Item>\r\n\r\n                    <Dropdown.Divider />\r\n\r\n                    <Dropdown.Item className='post-footer-item'>\r\n                        <IoIosRemoveCircleOutline className='post-footer-icon' />\r\n                        <span>Report</span>\r\n                    </Dropdown.Item>\r\n\r\n                </Dropdown.Menu>\r\n\r\n            </Dropdown>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PostFooter;\r\n","import React from 'react';\r\n\r\nimport { IoMdLogOut } from \"react-icons/io\"\r\n\r\nimport ScoreButton from './ScoreButton'\r\nimport PostTopBar from './PostTopBar'\r\nimport PostFooter from './PostFooter'\r\n\r\nimport './SinglePostCard.css'\r\n\r\n\r\n// supportive functions -----------------------------------------------\r\nfunction checkURL(url) {\r\n    return (url.match(/\\.(jpeg|jpg|gif|png)$/) != null);\r\n}\r\n\r\n// function htmlDecode(input) {\r\n//     const doc = new DOMParser().parseFromString(input, \"text/html\");\r\n//     return doc.documentElement.lastChild.innerHTML.replace('allowfullscreen', 'allowFullScreen').replace('class', 'className');\r\n// }\r\n\r\nfunction convertNums(x) {\r\n    if (x > 1000000) return (x * 0.000001).toFixed(1) + 'm'\r\n    if (x > 1000) return (x * 0.001).toFixed(1) + 'k'\r\n    return x\r\n}\r\n\r\n\r\n// component ---------------------------------------------------------\r\nconst SinglePostCard = ({ post }) => {\r\n\r\n    const { title, selftext_html, media_embed, url, thumbnail, permalink } = post\r\n\r\n    const convertedUps = convertNums(post.ups)\r\n    const subreddit = post.subreddit_name_prefixed\r\n    const authorName = post.author.name\r\n    const createdTimeUnix = post.created\r\n    const barParams = { subreddit, authorName, createdTimeUnix }\r\n\r\n    const convertedComments = convertNums(post.num_comments)\r\n    const footerParams = { permalink, convertedUps, convertedComments }\r\n\r\n\r\n    const mainDisplay = () => {\r\n        if (Object.entries(media_embed).length !== 0) {\r\n            return (<div className='single-post-card-media' dangerouslySetInnerHTML={{ __html: media_embed.content }} />)\r\n        }\r\n        else if (url && checkURL(url)) {\r\n            return (<img src={url} alt={title} className='single-post-card-img' />)\r\n        }\r\n        else if (thumbnail !== 'self' && thumbnail !== 'default' && thumbnail !== 'spoiler') {\r\n            return (<img src={thumbnail} alt={title} className='single-post-card-thumbnail' />)\r\n        }\r\n        else return\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='d-flex single-post-card-container'>\r\n            <a href={`https://www.reddit.com${permalink}`} rel=\"noopener noreferrer\" target=\"_blank\">\r\n                <span className=\"single-post-card-link-wrapper\"></span>\r\n            </a>\r\n            <ScoreButton convertedUps={convertedUps} />\r\n            <div>\r\n                <PostTopBar barParams={barParams} />\r\n                <h2 className='post-title'>{title}</h2>\r\n                {/* <p>{selftext}</p> */}\r\n                <div className='my-2 ml-1 max-height' dangerouslySetInnerHTML={{ __html: selftext_html }} />\r\n                <a href={url} className='single-post-card-link' rel=\"noopener noreferrer\" target=\"_blank\">\r\n                    {url}\r\n                    <IoMdLogOut className='text-primary' />\r\n                </a>\r\n                {mainDisplay()}\r\n\r\n                <PostFooter footerParams={footerParams} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SinglePostCard;\r\n","import React from 'react';\r\n\r\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap'\r\n\r\nimport './PostTopBar.css'\r\n\r\n\r\n\r\nfunction diffHours(dt2, dt1) {\r\n    var diff = (dt2.getTime() - dt1.getTime()) / 1000;\r\n    diff /= (60 * 60);\r\n    return Math.abs(Math.round(diff));\r\n}\r\n\r\n\r\nfunction PostTopBar({ barParams, className }) {\r\n\r\n    const { subreddit, authorName, createdTimeUnix } = barParams\r\n    const createdTime = new Date(createdTimeUnix * 1000)\r\n    const options = { weekday: 'short', month: 'short', day: 'numeric', year: 'numeric', hour: '2-digit', minute: '2-digit', second: '2-digit', timeZoneName: \"short\" }\r\n    const timeDisplayed = createdTime.toLocaleDateString('en-US', options)\r\n    const timePassed = diffHours(createdTime, new Date())\r\n\r\n    return (\r\n        <div className={`d-flex justify-content-between my-0 post-top-bar-container ${className}`}>\r\n\r\n            <div className='d-flex mt-1'>\r\n\r\n                <span></span>\r\n                <span className='top-bar-overlay font-weight-700'>{subreddit}</span>\r\n                <span className='top-bar-overlay'>&nbsp;u/{authorName}&nbsp;</span>\r\n                {/* <OverlayTrigger\r\n                    placement=\"bottom-start\"\r\n                    delay={{ show: 250, hide: 400 }}\r\n                    overlay={\r\n                        <Popover>\r\n                            <UserMiniWindow />\r\n                        </Popover>\r\n                    }\r\n                >\r\n                    <span className='top-bar-overlay font-weight-700'>{subreddit}</span>\r\n                </OverlayTrigger> */}\r\n\r\n                <span>&nbsp; &#183; &nbsp;</span>\r\n\r\n                <span>Posted by</span>\r\n\r\n                <OverlayTrigger\r\n                    placement=\"top\"\r\n                    delay={{ show: 250, hide: 400 }}\r\n                    overlay={<Tooltip className='top-bar-time-window'>{timeDisplayed}</Tooltip>}\r\n                >\r\n                    <span className='top-bar-overlay'>{timePassed} hours ago</span>\r\n                </OverlayTrigger>\r\n\r\n            </div>\r\n\r\n            {/* <Button className='top-bar-join-button'>+JOIN</Button> */}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PostTopBar;\r\n","import React from 'react';\r\n\r\nimport { IoMdLogOut, IoIosImage } from \"react-icons/io\"\r\n\r\nimport ScoreButton from './ScoreButton'\r\nimport PostTopBarClassic from './PostTopBarClassic'\r\nimport PostFooter from './PostFooter'\r\n\r\nimport './SinglePostClassic.css'\r\n\r\n\r\n// supportive functions ------------------------\r\n\r\nfunction convertNums(x) {\r\n    if (x > 1000) {\r\n        return (x * 0.001).toFixed(1) + 'k'\r\n    }\r\n    return x\r\n}\r\n\r\n// component ------------------------\r\nconst SinglePostClassic = ({ post }) => {\r\n\r\n    const { title, url, thumbnail, permalink } = post\r\n\r\n    const convertedUps = convertNums(post.ups)\r\n    const subreddit = post.subreddit_name_prefixed\r\n    const authorName = post.author.name\r\n    const createdTimeUnix = post.created\r\n    const barParams = { subreddit, authorName, createdTimeUnix }\r\n\r\n    const convertedComments = convertNums(post.num_comments)\r\n    const footerParams = { convertedUps, convertedComments }\r\n\r\n    const checkThumbnail = (thumbnail) => {\r\n        if (thumbnail !== 'self' &&\r\n            thumbnail !== 'default' &&\r\n            thumbnail !== 'spoiler' &&\r\n            thumbnail !== 'image') {\r\n            return (<img src={thumbnail} alt={title} className='single-post-classic-thumbnail' />)\r\n        }\r\n        return (<IoIosImage className='single-post-classic-thumbnail' />)\r\n    }\r\n\r\n\r\n    return (\r\n        <div href={`https://www.reddit.com${permalink}`} rel=\"noopener noreferrer\" target=\"_blank\" className='d-flex single-post-classic-container'>\r\n            <ScoreButton convertedUps={convertedUps} />\r\n            <div className='single-post-classic-right-container'>\r\n                {checkThumbnail(thumbnail)}\r\n                <div>\r\n                    <h2 className='post-title'>{title}</h2>\r\n                    <a href={url} className='d-block mt-2 ml-1' rel=\"noopener noreferrer\" target=\"_blank\">\r\n                        {url}\r\n                        <IoMdLogOut className='text-primary' />\r\n                    </a>\r\n                    <PostTopBarClassic barParams={barParams} />\r\n                    <PostFooter footerParams={footerParams} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SinglePostClassic;\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\n\r\nimport { asyncFetchPosts } from '../../actions/snoowrapActions'\r\nimport { increasePage, resetPage } from '../../actions/actions'\r\n\r\nimport SinglePostCard from './SinglePostCard';\r\nimport SinglePostClassic from './SinglePostClassic';\r\n\r\nimport './Posts.css'\r\n\r\n\r\n// component -------------------------------------\r\nconst Posts = ({ subreddit, sort, asyncFetchPosts, page, posts, view, fetching, resetPage, increasePage }) => {\r\n\r\n  useEffect(() => {\r\n    resetPage()\r\n  }, [resetPage, subreddit, sort])\r\n\r\n  useEffect(() => {\r\n    asyncFetchPosts(subreddit, sort, page)\r\n  }, [asyncFetchPosts, subreddit, sort, page])\r\n\r\n  // console.log('posts:', posts)\r\n\r\n  const viewPosts = () => {\r\n    switch (view) {\r\n      case 'card':\r\n        return post => <SinglePostCard key={post.id} post={post} />\r\n      case 'classic':\r\n        return post => <SinglePostClassic key={post.id} post={post} />\r\n      case 'compact':\r\n        return post => <SinglePostCard key={post.id} post={post} />\r\n      default:\r\n        return\r\n    }\r\n  }\r\n\r\n  // when view is set to classic, reset the container width\r\n  // const viewContainerWidth = () => {\r\n  //   if (view === 'classic' && fetching === false) return 'width-auto'\r\n  //   else return ''\r\n  // }\r\n\r\n\r\n  return (\r\n    <main className={`posts-container`}>\r\n\r\n      <InfiniteScroll\r\n        pullDownToRefresh\r\n        refreshFunction={resetPage}\r\n        dataLength={posts.length}\r\n        next={increasePage}\r\n        hasMore={true}\r\n        loader={<h4>Loading...</h4>}\r\n      >\r\n        {posts.map(viewPosts(view))}\r\n      </InfiniteScroll>\r\n\r\n    </main>\r\n  )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    subreddit: state.subreddit,\r\n    sort: state.sort,\r\n    page: state.page,\r\n    posts: state.posts,\r\n    view: state.view,\r\n    fetching: state.fetching,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, { asyncFetchPosts, increasePage, resetPage })(Posts)","import React from 'react';\r\n\r\nimport { Button } from 'react-bootstrap'\r\n\r\nimport { RedditCard } from '../customComponents'\r\n\r\nimport './Feeds.css'\r\n\r\n\r\nfunction Feeds() {\r\n    return (\r\n        <RedditCard className='mt-0'>\r\n            <div className='feeds-landscape'></div>\r\n            <div className='d-flex feeds-guy-container'>\r\n                <div className='feeds-guy-icon'></div>\r\n                <h6 className='feeds-title'>r/popular</h6>\r\n            </div>\r\n            <p className='feeds-para'>The best posts on Reddit for you, pulled from the most active communities on Reddit. Check here to see the most shared, upvoted, and commented content on the internet.</p>\r\n            <Button className='feeds-button'>create post</Button>\r\n        </RedditCard>\r\n    );\r\n}\r\n\r\nexport default Feeds;\r\n","import React from 'react';\r\n\r\nimport './SidePlaceholder.css'\r\n\r\nimport { RedditCard } from '../customComponents'\r\n\r\n\r\nfunction SidePlaceholder() {\r\n    return (\r\n        <RedditCard className='side-placeholder'>\r\n\r\n        </RedditCard>\r\n    );\r\n}\r\n\r\nexport default SidePlaceholder;\r\n","import React from 'react';\r\n\r\nimport { RedditCard } from '../customComponents'\r\n\r\nimport { Button } from 'react-bootstrap'\r\n\r\nimport { IoMdRose } from \"react-icons/io\"\r\n\r\nimport './Premium.css'\r\n\r\nfunction Premium() {\r\n    return (\r\n        <RedditCard className='d-flex justify-content-between align-items-center premium-container'>\r\n            <IoMdRose className='premium-icon mr-2'/>\r\n            <div className='premium-text-container pr-1'>\r\n                <h6 className='side-menu-text-title'>Reddit Premium</h6>\r\n                <p className='side-menu-text-para'>The best Reddit experience, with monthly Coins</p>\r\n            </div>\r\n            <Button className='premium-button'>try now</Button>\r\n        </RedditCard>\r\n    );\r\n}\r\n\r\nexport default Premium;\r\n","import React from 'react';\r\n\r\nimport { Button } from 'react-bootstrap'\r\n\r\nimport './SingleCommunity.css'\r\n\r\n\r\nfunction convertNums(x) {\r\n    if (x > 1000000) return (x * 0.000001).toFixed(1) + 'm'\r\n    if (x > 1000) return (x * 0.001).toFixed(1) + 'k'\r\n    return x\r\n}\r\n\r\n\r\nfunction SingleCommunity({ icon_img, display_name_prefixed, subscribers }) {\r\n\r\n    const convertedSubscribers = convertNums(subscribers)\r\n\r\n    return (\r\n        <div className='d-flex justify-content-between align-items-center my-2'>\r\n            <img src={icon_img} alt={display_name_prefixed} className='single-community-icon' />\r\n            <div className='single-community-text-container'>\r\n                <a href={`https://www.reddit.com/${display_name_prefixed}`}\r\n                    className='side-menu-text-title'\r\n                    rel=\"noopener noreferrer\"\r\n                    target=\"_blank\">{display_name_prefixed}</a>\r\n                <p className='side-menu-text-para'>{convertedSubscribers} members</p>\r\n            </div>\r\n            <a href={`https://www.reddit.com/${display_name_prefixed}`}\r\n                className=''\r\n                rel=\"noopener noreferrer\"\r\n                target=\"_blank\"\r\n            >\r\n                <Button className='single-community-button'>try now</Button>\r\n            </a>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SingleCommunity;\r\n","import React, { useEffect } from 'react';\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { RedditCard } from '../customComponents'\r\nimport SingleCommunity from './SingleCommunity'\r\n\r\nimport { asyncFetchTrendingCommunities } from '../../actions/snoowrapActions'\r\n\r\nimport './TrendingCommunities.css'\r\n\r\n\r\nconst TrendingCommunities = ({ trendingCommunities, asyncFetchTrendingCommunities }) => {\r\n\r\n    useEffect(() => {\r\n        asyncFetchTrendingCommunities()\r\n    })\r\n\r\n    return (\r\n        <RedditCard className='trending-communities-container'>\r\n            <h6 className='trending-communities-title'>Trending Communities</h6>\r\n            <div className='d-flex flex-column mt-2'>\r\n                {trendingCommunities.map(community => <SingleCommunity {...community} />)}\r\n            </div>\r\n        </RedditCard>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        trendingCommunities: state.trendingCommunities,\r\n    }\r\n}\r\n\r\n//   export default connect(mapStateToProps)(TrendingCommunities)\r\nexport default connect(mapStateToProps, { asyncFetchTrendingCommunities })(TrendingCommunities)","import React from 'react';\r\n\r\nimport './UpperFooter.css'\r\n\r\n\r\nfunction UpperFooter() {\r\n    return (\r\n        <div className='d-flex justify-content-between upper-footer-container'>\r\n            <div className='d-flex flex-column'>\r\n                <a href=\"https://about.reddit.com\" className='footer-text'>about</a>\r\n                <a href=\"https://about.reddit.com/careers\" className='footer-text'>careers</a>\r\n                <a href=\"https://about.reddit.com/press\" className='footer-text'>press</a>\r\n            </div>\r\n            <div className='d-flex flex-column'>\r\n                <a href=\"https://about.reddit.com/advertise\" className='footer-text'>advertise</a>\r\n                <a href=\"https://redditblog.com/\" className='footer-text'>blog</a>\r\n                <a href=\"https://www.reddithelp.com/careers\" className='footer-text'>help</a>\r\n            </div>\r\n            <div className='d-flex flex-column'>\r\n                <a href=\"https://www.reddit.com/mobile/download\" className='footer-text'>the reddit app</a>\r\n                <a href=\"https://www.reddit.com/coins\" className='footer-text'>reddit coins</a>\r\n                <a href=\"https://www.reddit.com/premium\" className='footer-text'>reddit premium</a>\r\n                <a href=\"https://redditgifts.com/\" className='footer-text'>reddit gifts</a>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UpperFooter;","import React from 'react';\r\n\r\n// import './LowerFooter.css'\r\n\r\n\r\nfunction LowerFooter() {\r\n    return (\r\n        <div className='mt-3 text-center'>\r\n            <div>\r\n                <a href=\"https://www.reddit.com/help/contentpolicy\" className='footer-text'>content policy | privacy policy</a>\r\n            </div>\r\n            <div>\r\n                <a href=\"https://www.reddit.com/help/useragreement\" className='footer-text'>user agreement | mod policy</a>\r\n            </div>\r\n            <div>\r\n                <span className='footer-text'>© 2019 Reddit, Inc. All rights reserved</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LowerFooter;","import React from 'react';\r\n\r\nimport UpperFooter from './UpperFooter'\r\nimport LowerFooter from './LowerFooter'\r\nimport { RedditCard } from '../customComponents'\r\n\r\nimport './Footer.css'\r\n\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer>\r\n            <RedditCard className='footer-container'>\r\n                <UpperFooter />\r\n                <LowerFooter />\r\n            </RedditCard>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nimport Feeds from './Feeds';\r\nimport SidePlaceholder from './SidePlaceholder'\r\nimport Premium from './Premium'\r\nimport TrendingCommunities from './TrendingCommunities'\r\nimport Footer from './Footer'\r\n\r\nimport { Button } from 'react-bootstrap'\r\n\r\nimport './SideMenu.css'\r\n\r\n\r\n\r\nconst SideMenu = () => {\r\n\r\n  const handleClick = () => {\r\n    document.documentElement.scrollTop = 0\r\n  }\r\n\r\n  return (\r\n    <aside className='flex-column side-menu-container'>\r\n      <Feeds />\r\n      <SidePlaceholder />\r\n      <Premium />\r\n      <TrendingCommunities />\r\n      <SidePlaceholder />\r\n      <Footer />\r\n      <Button onClick={handleClick} className='back-to-top'>back to top</Button>\r\n    </aside>\r\n  );\r\n}\r\n\r\nexport default SideMenu;\r\n","import { combineReducers } from 'redux'\r\nimport { SWITCH_FETCHING, SUBREDDIT, SORT, VIEW, POSTS, TRENDING_COMMUNITIES, INCREASE_PAGE, RESETE_PAGE } from '../actions/actions'\r\n\r\n\r\nconst fetching = (state = false, action) => {\r\n    switch (action.type) {\r\n        case SWITCH_FETCHING:\r\n            return !state\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst subreddit = (state = 'popular', action) => {\r\n    switch (action.type) {\r\n        case SUBREDDIT:\r\n            return action.value\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst sort = (state = 'hot', action) => {\r\n    switch (action.type) {\r\n        case SORT:\r\n            return action.value\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst view = (state = 'card', action) => {\r\n    switch (action.type) {\r\n        case VIEW:\r\n            return action.value\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst page = (state = 1, action) => {\r\n    switch (action.type) {\r\n        case INCREASE_PAGE:\r\n            return state + 1\r\n        case RESETE_PAGE:\r\n            return 1\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst posts = (state = [], action) => {\r\n    switch (action.type) {\r\n        case POSTS:\r\n            return action.value\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst trendingCommunities = (state = [], action) => {\r\n    switch (action.type) {\r\n        case TRENDING_COMMUNITIES:\r\n            return action.value\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const reducer = combineReducers({ fetching, subreddit, sort, view, page, posts, trendingCommunities })\r\n","import { createStore, compose, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\n\r\nimport { reducer } from '../reducers/reducers'\r\n\r\nexport const store = createStore(\r\n\treducer,\r\n\tcompose(\r\n\t\tapplyMiddleware(thunk),\r\n\t\twindow.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n\t)\r\n)","import React from 'react'\nimport { Provider } from 'react-redux'\n\nimport Header from './components/Header'\nimport Posts from './components/posts/Posts'\nimport SideMenu from './components/side-menu/SideMenu'\n\nimport { store } from './store/store'\n\nimport './responsive.css'\nimport './App.css'\n\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Header />\n      <div className='main-container main-responsive-container'>\n        <Posts />\n        <SideMenu />\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}